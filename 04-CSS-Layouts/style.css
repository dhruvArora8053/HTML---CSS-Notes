* {
  /* border-top: 10px solid #1098ad; */
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* PAGE SECTIONS */
body {
  color: #444;
  font-family: sans-serif;

  border-top: 10px solid #1098ad;
  position: relative;
}

.container {
  width: 1200px;
  /* margin-left: auto;
  margin-right: auto; */
  margin: 0 auto;
}

.main-header {
  background-color: #f7f7f7;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  margin-bottom: 60px;
  /* height: 80px; */
}

nav {
  font-size: 18px;
  /* text-align: center; */
}

article {
  margin-bottom: 60px;
}

.post-header {
  margin-bottom: 40px;
  /* position: relative; */
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 0;
}

/* SMALLER ELEMENTS */
h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
  margin-bottom: 15px;
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
  /* display: inline; */
}

li:last-child {
  margin-bottom: 0;
}

/* footer p {
  font-size: 16px;
} */

/* article header p {
  font-style: italic;
} */

#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

/* ul {
  list-style: none;
} */

.related {
  list-style: none;
  margin-left: 0;
}

body {
  /* background-color: orangered; */
}

/* .first-li {
  font-weight: bold;
} */

li:first-child {
  font-weight: bold;
}

li:last-child {
  font-style: italic;
}

li:nth-child(even) {
  /* color: red; */
}

/* Misconception: this won't work! */
article p:first-child {
  color: red;
}

/* Styling links */
a:link {
  color: #1098ad;
  text-decoration: none;
}

a:visited {
  /* color: #777; */
  color: #1098ad;
}

a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

a:active {
  background-color: black;
  font-style: italic;
}
/* LVHA */

.post-img {
  width: 100%;
  height: auto;
}

nav a:link {
  /* background-color: orangered;
  margin: 20px;
  padding: 20px;

  display: block; */

  margin-right: 30px;
  margin-top: 10px;
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;

  position: absolute;
  /* top: 50px;
  left: 50px; */
  bottom: 50px;
  right: 50px;
}

h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

h3 + p::first-line {
  /* color: red; */
}

h2 {
  /* background-color: orange; */
  position: relative;
}

h2::before {
  content: "TOP";
  background-color: #ffe70e;
  color: #444;
  font-size: 16px;
  font-weight: bold;
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: -10px;
  right: -25px;
}

/* Resolving conflicts */
/* #copyright {
  color: red;
}

.copyright {
  color: blue;
}

.text {
  color: yellow;
}

footer p {
  color: green !important;
} */

/* nav a:link,
nav p {
  font-size: 18px;
} */

/* .author-img {
  float: left;
  margin-bottom: 20px;
} */
/* and with this what is going to happen is that this image is basically going be taken out of the document flow just like an absolutely positioned element, now the difference here with floats is that then all the other elements will basically float around it */

.author-img{
  float: left;
  margin-bottom: 20px;
}

/* .author {
  /* padding-left: 80px; */
  /* how can we fix the fact that the author p element basically starts right at the beginning of container so behind the image? */
  /* so what we can do is float this element itself */
  float: left;
  margin-top: 10px;
  margin-left: 20px;
  /* now the element starts right after the floated image, we could also set it to right here and then it would move all the way to the right side of the container */
} */
/* so here we can very clearly see that the element itself actually does not start right here where text is but it does infact start right behind the image  */

/* so here we could confirm again that this image has been taken completely out of the page's flow, it is as if the image isn't even on the page, it really does not affect the surrounding elements */

/* Goal: to have h1 and nav to float on the same side */
/* h1 {
  float: left;
}

nav {
  float: right;
} */
/* and so now what we can see here is that the header element kind of lost its height so it looks very weird infact the only reason why it is still visible is because we have some padding here so if we remove the padding then this element would disappear completely so atleast the background color behind it so why is this happening? */
/* Well, the reason is that all of it's child elements which are in this case only two so the header only has two child elements the h1 and the nav and right now all of them are floated this means that it's as if these elements would not even be on the page so as if they had been removed and so now the element basically has no content anymore and so that way it makes sense that it's height is actually zero. So again, the height is now as if it was zero, the only remaining space that is remaining because of the padding.  */
/* So this phenomena is what we call the collapsing elements and when this happens we say that the elements height has collapsed and this again happened because both of it's children are now floated so it's as if they were not on the page anymore */

/* Difference between absolute positioning and floats */
/* It is that floated elements do still have an impact on surrounding elements so text and inline elements will actually wrap around the floated element and so again in this regard floated elements are completely different from absolutely positioned elements which have no impact and are also not impacted by any of the surrounding elements.  */
/* Finally one very important characterstic of floats is that the container element will simply not adjust it's height to the floated element and so this is the exactly reason why in the last example that we just saw, we saw that the container element collapsed it's height. */

/* 48-Clearing Floats: */
/* .clear {
  clear: both;
} */

/* .clearfix::after {
  clear: both;
  content: "";
  display: block;
} */

/* 49-Building a simple float layout */
/* article {
  /* background-color: green; */
  width: 825px;
  float: left;
} */

/* aside {
  /* background-color: red; */
  width: 300px;
  float: right;
} */

/* footer {
  /* background-color: yellow; */
  clear: both;
} */

/* 50-Box-sizing, Border-Box:- */
/* aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 40px 40px;

  /* by adding 40px of padding for left and right is a little big for the conatainer to hold and it is overlapping the article element so to stop that: aside element got shifted down
  totalWidth= articleWidth+paddingLeft+paddingRight
  totalWidth=300px+40px+40px
  totalWidth=380px: according to default behavior of box model sizing */
} */

/* To solve this now we use the other way of Box-Sizing */
/* aside {
  box-sizing: border-box;
  /* Given width: 300px
  now it will adjust it's content width according to padding and borders and it will not go over 300px which means paddings and borders width will stay under 300px */
  /* Note:- this property does not get inherited through the parent element so always give it to the universal selector */
} */

/* h4 {
  margin-bottom: 30px;
} */

/* 52-Intro to Flexbox:- */
